<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Brushes/DefaultColorTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Name="Background" SnapsToDevicePixels="true">
                        <!--sets base background to progressbar control-->
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="2"/>
                        <!--adds glassy background to unfilled progressbar area-->
                        <Border Background="{StaticResource ProgressBarGlassyHighlight}"
                                Margin="1"
                                CornerRadius="2"/>
                        <!--a tiny 1pt semi-white border inside outer border to make it more glassy-->
                        <Border BorderBrush="#80FFFFFF"
                                Background="{StaticResource ProgressBarTopHighlight}"
                                BorderThickness="1,0,1,1"
                                Margin="1"/>
                        <!--actual progressbar fill track-->
                        <Border Name="PART_Track" Margin="1"/>

                        <Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
                            <Grid Name="Foreground">
                                <Border x:Name="Indicator"
                                        Background="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation"
                                           Fill="{TemplateBinding Foreground}">
                                    <Rectangle.OpacityMask>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <themes:ProgressBarHighlightConverter/>
                                            </MultiBinding.Converter>
                                            <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill}"/>
                                            <Binding Path="ActualWidth"
                                                     ElementName="Background"/>
                                            <Binding Path="ActualHeight"
                                                     ElementName="Background"/>
                                        </MultiBinding>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <!--sets progressbar's top half glassy effect-->
                                <Border x:Name="Highlight1"
                                        Background="{StaticResource ProgressBarIndicatorGlassyHighlight}"/>
                                <!--sets progressbar's bottom half glassy effect-->
                                <Border x:Name="Highlight2"
                                        Background="{StaticResource ProgressBarTopHighlight}"/>
                            </Grid>
                        </Decorator>
                        <!--renders actual border around progressbar-->
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Background" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Indicator" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Foreground" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter TargetName="Animation" Property="Fill" Value="#80B5FFA9"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>